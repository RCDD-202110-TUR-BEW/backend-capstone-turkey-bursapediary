{
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "SessionKey": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string",
            "format": "string",
            "description": "username"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "user email"
          },
          "password": {
            "type": "string",
            "format": "string",
            "description": "user password"
          },
          "name": {
            "type": "string",
            "format": "string",
            "description": "user name"
          },
          "role": {
            "type": "string",
            "format": "string",
            "description": "user role"
          },
          "type": {
            "type": "string",
            "format": "string",
            "description": "user account type"
          },
          "projects": {
            "type": "array",
            "format": "array",
            "description": "user projects list"
          },
          "donations": {
            "type": "array",
            "format": "array",
            "description": "user donations list"
          },
          "provider": {
            "type": "string",
            "format": "string",
            "description": "provider name"
          },
          "providerId": {
            "type": "string",
            "format": "string",
            "description": "provider id"
          }
        }
      },
      "Project": {
        "type": "object",
        "required": ["title", "description", "amount"],
        "properties": {
          "title": {
            "type": "string",
            "format": "string",
            "description": "project title"
          },
          "description": {
            "type": "string",
            "format": "string",
            "description": "project description"
          },
          "amount": {
            "type": "number",
            "format": "number",
            "description": "amount need to collect for project"
          },
          "collectedAmount": {
            "type": "number",
            "format": "number",
            "description": "amount collected for project"
          },
          "isDone": {
            "type": "boolean",
            "format": "boolean",
            "description": "project donation status"
          },
          "isExpired": {
            "type": "boolean",
            "format": "boolean",
            "description": "project valid status"
          },
          "comments": {
            "type": "array",
            "format": "array",
            "description": "comments list"
          },
          "reviews": {
            "type": "array",
            "format": "array",
            "description": "review list"
          },
          "owners": {
            "type": "array",
            "format": "array",
            "description": "project owners list"
          },
          "supporters": {
            "type": "array",
            "format": "array",
            "description": "project supporters list"
          },
          "categories": {
            "type": "array",
            "format": "array",
            "description": "project categories list"
          },
          "donations": {
            "type": "array",
            "format": "array",
            "description": "project donations list"
          }
        }
      },
      "Donation": {
        "type": "object",
        "required": ["amount", "userId"],
        "properties": {
          "amount": {
            "type": "number",
            "format": "number",
            "description": "amount of donation"
          },
          "userId": {
            "type": "string",
            "format": "string",
            "description": "donator user id"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "format": "string",
            "description": "comment user id"
          },
          "content": {
            "type": "string",
            "format": "string",
            "description": "comment content"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "format": "string",
            "description": "review user id"
          },
          "content": {
            "type": "string",
            "format": "string",
            "description": "review content"
          },
          "rating": {
            "type": "number",
            "format": "number",
            "description": "review rating"
          }
        }
      }
    }
  },
  "info": {
    "version": "1.0.0",
    "title": "Bursapediary API",
    "description": ""
  },
  "servers": [
    {
      "url": "https://bursapediary.com",
      "description": "Production Domain"
    },
    {
      "url": "https://bursapediary.herokuapp.com",
      "description": "Production Heroku"
    },
    {
      "url": "http://localhost:3000",
      "description": "Localhost"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Projects",
      "description": "Projects endpoints"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Logs a user in",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/LoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Registers a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/RegisterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "ok"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "security": [{ "SessionKey": [] }],
        "tags": ["Users"],
        "summary": "Logs a user out",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{username}": {
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "required": true,
          "description": "username",
          "type": "string"
        }
      ],
      "get": {
        "security": [{ "SessionKey": [] }],
        "tags": ["Users"],
        "summary": "Get user profile by username",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity response"
          }
        }
      }
    },
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "user ID",
          "type": "string"
        }
      ],
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Updates a user",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user ID",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ]
      },
      "delete": {
        "security": [{ "SessionKey": [] }],
        "summary": "Deletes user by id",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "user ID",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User Deleted",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "404": {
            "description": "User Not Found",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "List all projects",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity response"
          }
        }
      },
      "post": {
        "security": [{ "SessionKey": [] }],
        "tags": ["Projects"],
        "summary": "Create new project",
        "responses": {
          "201": {
            "description": "Created"
          },
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity response"
          }
        }
      }
    },
    "/projects/filter/{category}": {
      "get": {
        "summary": "Filter Projects by the given category",
        "tags": ["Projects"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "description": "Project Category",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "get": {
        "summary": "Get project by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Update project by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "delete": {
        "security": [{ "SessionKey": [] }],
        "summary": "Delete project by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/finish": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Change project donation status to completed by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/comments": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "get": {
        "summary": "List project comments by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "post": {
        "security": [{ "SessionKey": [] }],
        "summary": "Create comment on project by id",
        "tags": ["Projects"],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/comments/{commentId}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        },
        {
          "name": "commentId",
          "in": "path",
          "required": true,
          "description": "comment id",
          "type": "string"
        }
      ],
      "get": {
        "summary": "List project single comment by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Update project single comment by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "delete": {
        "security": [{ "SessionKey": [] }],
        "summary": "Delete project single comment by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/reviews": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "get": {
        "summary": "List project reviews by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "post": {
        "security": [{ "SessionKey": [] }],
        "summary": "Create review on project by id",
        "tags": ["Projects"],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/review/{reviewId}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        },
        {
          "name": "reviewId",
          "in": "path",
          "required": true,
          "description": "review id",
          "type": "string"
        }
      ],
      "get": {
        "summary": "List project single review by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Update project single review by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      },
      "delete": {
        "security": [{ "SessionKey": [] }],
        "summary": "Delete project single review by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/supporters": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "get": {
        "security": [{ "SessionKey": [] }],
        "summary": "List project supporters by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/support": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "put": {
        "security": [{ "SessionKey": [] }],
        "summary": "Make donation on project by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/{id}/profile": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "project id",
          "type": "string"
        }
      ],
      "get": {
        "security": [{ "SessionKey": [] }],
        "summary": "Generate project profile by id",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/index": {
      "post": {
        "security": [{ "SessionKey": [] }],
        "summary": "Index projects to elasticsearch client",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    },
    "/projects/search/{text}": {
      "parameters": [
        {
          "name": "text",
          "in": "path",
          "required": true,
          "description": "Search string",
          "type": "string"
        }
      ],
      "get": {
        "summary": "Searched indexed projects with elasticsearch",
        "tags": ["Projects"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/id"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/id"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "id": {
      "properties": {
        "uuid": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "user": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/User"
        }
      },
      "content": "string"
    },
    "Review": {
      "user": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/definitions/User"
        }
      },
      "rating": {
        "type": "number"
      },
      "content": "string"
    },
    "Donation": {
      "amount": {
        "type": "number"
      },
      "userID": {
        "type": "string"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": false
        },
        "email": {
          "type": "string",
          "required": true
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "users": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/User"
          }
        }
      }
    },
    "Project": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "description": {
          "type": "string",
          "required": true
        },
        "amount": {
          "type": "number",
          "required": true
        },
        "collectedAmount": {
          "type": "number",
          "required": true,
          "default": 0
        },
        "isDone": {
          "type": "boolean",
          "required": true,
          "default": false
        },
        "isExpired": {
          "type": "boolean",
          "required": true,
          "default": false
        },
        "owners": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/User"
          }
        },
        "supporters": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/User"
          }
        },
        "comments": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/Comment"
          }
        },
        "reviews": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/Review"
          }
        },
        "donations": {
          "type": "array",
          "additionalProperties": {
            "$ref": "#/definitions/Donation"
          }
        }
      }
    },
    "Projects": {
      "type": "object",
      "properties": {
        "projects": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Project"
          }
        }
      }
    },
    "LoginBody": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": true
        },
        "password": {
          "type": "string",
          "required": true
        }
      }
    },
    "RegisterBody": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "required": true
        },
        "password": {
          "type": "string",
          "required": true
        },
        "confirmPassword": {
          "type": "string",
          "required": true
        },
        "email": {
          "type": "string",
          "required": true
        }
      }
    }
  }
}
